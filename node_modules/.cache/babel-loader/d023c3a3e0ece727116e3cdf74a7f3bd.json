{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/Documents/bookmarker/src/components/AddModal/AddModal.js\";\nimport React from 'react';\nimport './AddModal.css';\nimport url from './url-white-x.png';\nimport axios from 'axios';\nimport Preview from '../Preview/Preview';\n\nclass AddModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.setState({\n        url: event.target.value,\n        previewLoading: false,\n        gotResponse: false\n      });\n    };\n\n    this.postUrl = event => {\n      event.preventDefault();\n      this.setState({\n        previewLoading: true,\n        responseMsg: 'Loading...'\n      });\n      var url = {\n        urlgot: this.state.url\n      };\n      axios.post('http://localhost:9000/url', url).then(res => {\n        this.setState({\n          apiResponse: res.data.other,\n          gotResponse: true\n        });\n        console.log(res.data.other);\n      }).catch(this.setState({\n        responseMsg: \"oops: cant connect\"\n      }));\n    };\n\n    this.saveUrl = () => {\n      const new_bookmark = {\n        url: this.state.url,\n        icon: this.state.apiResponse.icon,\n        title: this.state.apiResponse.title,\n        description: this.state.apiResponse.description\n      };\n      console.log(new_bookmark);\n      this.props.addBookmark(new_bookmark);\n      this.props.changeModalVisibility(false);\n    };\n\n    this.handleClick = e => {\n      if (!this.node.contains(e.target)) {\n        return this.props.changeModalVisibility(false);\n      }\n    };\n\n    this.state = {\n      url: '',\n      apiResponse: '',\n      previewLoading: false,\n      gotResponse: false,\n      responseMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick, false);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"pageMask\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addUrlModal\",\n      role: \"dialog\",\n      ref: node => this.node = node,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.postUrl,\n      className: \"addUrlInputGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"urlIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: url,\n      alt: \"url icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      autoFocus: true,\n      onChange: this.onChange,\n      required: true,\n      value: this.state.url,\n      className: \"addUrlInput\",\n      type: \"text\",\n      name: \"url\",\n      placeholder: \"https://example.com/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), this.state.gotResponse ? React.createElement(\"button\", {\n      onClick: this.saveUrl,\n      type: \"button\",\n      className: \"modalButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Save\") : React.createElement(\"button\", {\n      onClick: this.postUrl,\n      type: \"button\",\n      className: \"modalButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Load\")), this.state.previewLoading && React.createElement(Preview, {\n      other: this.state.apiResponse,\n      gotResponse: this.state.gotResponse,\n      responseMsg: this.state.responseMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AddModal;","map":{"version":3,"sources":["/home/ahmed/Documents/bookmarker/src/components/AddModal/AddModal.js"],"names":["React","url","axios","Preview","AddModal","Component","constructor","props","onChange","event","setState","target","value","previewLoading","gotResponse","postUrl","preventDefault","responseMsg","urlgot","state","post","then","res","apiResponse","data","other","console","log","catch","saveUrl","new_bookmark","icon","title","description","addBookmark","changeModalVisibility","handleClick","e","node","contains","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './AddModal.css'\nimport url from './url-white-x.png'\nimport axios from 'axios'\nimport Preview from '../Preview/Preview';\n\nclass AddModal extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            url: '',\n            apiResponse: '',\n            previewLoading: false,\n            gotResponse: false,\n            responseMsg: ''\n        }\n    }\n\n    onChange = event => {\n        this.setState({\n            url: event.target.value,\n            previewLoading: false,\n            gotResponse: false\n        })\n    }\n\n    postUrl = (event) => {\n        event.preventDefault()\n        this.setState({\n            previewLoading: true,\n            responseMsg: 'Loading...'\n        })\n        var url = {\n            urlgot: this.state.url\n        }\n        axios.post('http://localhost:9000/url', url)\n            .then(res => {\n                this.setState({ apiResponse: res.data.other, gotResponse: true })\n                console.log(res.data.other)\n            })\n            .catch(this.setState({responseMsg: \"oops: cant connect\"}))\n    }\n\n    saveUrl = () => {\n        const new_bookmark = {\n            url: this.state.url,\n            icon: this.state.apiResponse.icon,\n            title: this.state.apiResponse.title,\n            description: this.state.apiResponse.description\n        }\n        console.log(new_bookmark)\n        this.props.addBookmark(new_bookmark)\n        this.props.changeModalVisibility(false)\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClick, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClick, false);\n    }\n\n    handleClick = (e) => {\n        if (!this.node.contains(e.target)) {\n            return (this.props.changeModalVisibility(false));\n        }\n    }\n\n    render () {\n        return (\n            <div id=\"pageMask\" >\n                <div className=\"addUrlModal\" role=\"dialog\" ref={node => this.node = node}>\n                    <form onSubmit={this.postUrl} className=\"addUrlInputGroup\">\n                        <div className=\"urlIcon\">\n                            <img src={url} alt=\"url icon\" />\n                        </div>\n                        <input autoFocus onChange={this.onChange} required value={this.state.url} className=\"addUrlInput\" type=\"text\" name=\"url\" placeholder=\"https://example.com/\" />\n                        {this.state.gotResponse\n                            ?\n                            <button onClick={this.saveUrl} type=\"button\" className=\"modalButton\">Save</button>\n                            :\n                            <button onClick={this.postUrl} type=\"button\" className=\"modalButton\">Load</button>\n                        }\n                    </form>\n                    {this.state.previewLoading && <Preview other={this.state.apiResponse} gotResponse={this.state.gotResponse} responseMsg={this.state.responseMsg}/>}\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default AddModal"]},"metadata":{},"sourceType":"module"}