{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/Documents/bookmarker/src/components/AddModal/AddModal.js\";\nimport React from 'react';\nimport './AddModal.css';\nimport url from './url-white-x.png';\nimport axios from 'axios';\nimport Preview from '../Preview/Preview';\n\nclass AddModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value,\n        previewLoading: true\n      });\n    };\n\n    this.postUrl = () => {\n      var url = {\n        urlgot: this.state.url\n      };\n      axios.post('http://localhost:9000/url', url).then(res => {\n        this.setState({\n          apiResponse: res.data.other,\n          previewLoading: false\n        });\n      }).catch(err => {\n        console.error(err);\n      });\n      console.log(this.state.apiResponse);\n    };\n\n    this.saveUrl = () => {};\n\n    this.handleClick = e => {\n      if (!this.node.contains(e.target)) {\n        return this.props.changeModalVisibility(false);\n      }\n    };\n\n    this.state = {\n      url: '',\n      apiResponse: '',\n      previewLoading: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick, false);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"pageMask\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addUrlModal\",\n      role: \"dialog\",\n      ref: node => this.node = node,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addUrlInputGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"urlIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: url,\n      alt: \"url icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      autoFocus: true,\n      onChange: this.onChange,\n      required: true,\n      value: this.state.url,\n      className: \"addUrlInput\",\n      type: \"text\",\n      name: \"url\",\n      placeholder: \"add url here...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), this.state.apiResponse ? React.createElement(\"button\", {\n      onClick: this.saveUrl,\n      className: \"modalButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Save\") : React.createElement(\"button\", {\n      onClick: this.postUrl,\n      className: \"modalButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Load\")), this.state.preview && React.createElement(Preview, {\n      og: this.state.apiResponse,\n      previewLoading: this.previewLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AddModal;","map":{"version":3,"sources":["/home/ahmed/Documents/bookmarker/src/components/AddModal/AddModal.js"],"names":["React","url","axios","Preview","AddModal","Component","constructor","props","onChange","event","setState","target","name","value","previewLoading","postUrl","urlgot","state","post","then","res","apiResponse","data","other","catch","err","console","error","log","saveUrl","handleClick","e","node","contains","changeModalVisibility","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","preview"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './AddModal.css'\nimport url from './url-white-x.png'\nimport axios from 'axios'\nimport Preview from '../Preview/Preview';\n\nclass AddModal extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            url: '',\n            apiResponse: '',\n            previewLoading: false\n        }\n    }\n\n    onChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            previewLoading: true\n        })\n    }\n\n    postUrl = () => {\n        var url = {\n            urlgot: this.state.url\n        }\n        axios\n          .post('http://localhost:9000/url', url)\n            .then(res => {this.setState({apiResponse: res.data.other, previewLoading: false})})\n            .catch(err => { console.error(err) })\n        console.log(this.state.apiResponse)\n    }\n\n    saveUrl = () => {\n\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClick, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClick, false);\n    }\n\n    handleClick = (e) => {\n        if (!this.node.contains(e.target)) {\n            return (this.props.changeModalVisibility(false));\n        }\n    }\n\n    render () {\n        return (\n            <div id=\"pageMask\" >\n                <div className=\"addUrlModal\" role=\"dialog\" ref={node => this.node = node}>\n                    <div className=\"addUrlInputGroup\">\n                        <div className=\"urlIcon\">\n                            <img src={url} alt=\"url icon\" />\n                        </div>\n                        <input autoFocus onChange={this.onChange} required value={this.state.url} className=\"addUrlInput\" type=\"text\" name=\"url\" placeholder=\"add url here...\" />\n                        {this.state.apiResponse\n                            ?\n                            <button onClick={this.saveUrl} className=\"modalButton\">Save</button>\n                            :\n                            <button onClick={this.postUrl} className=\"modalButton\">Load</button>\n                        }\n                    </div>\n                    {this.state.preview && <Preview og={this.state.apiResponse} previewLoading={this.previewLoading} />}\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default AddModal"]},"metadata":{},"sourceType":"module"}